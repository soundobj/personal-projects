@import "./vars.scss";

@mixin shakeTemplate($name, $color: inherit, $shouldEndWithColor: false) {
  @keyframes #{$name} {
    0% {
      color: $color;
    }
    10%,
    90% {
      transform: translate3d(-1px, 0, 0);
      color: $color;
    }

    20%,
    80% {
      transform: translate3d(2px, 0, 0);
      color: $color;
    }

    30%,
    50%,
    70% {
      transform: translate3d(-4px, 0, 0);
      color: $color;
    }

    40%,
    60% {
      transform: translate3d(4px, 0, 0);
      color: $color;
    }

    100% {
      @if ($shouldEndWithColor) {
        color: $color;
      } @else {
        color: inherit;
      }
    }
  }
}

@include shakeTemplate("shakeConflict", var(--warning));
@include shakeTemplate("shakeWrongValue", var(--warning), true);
@include shakeTemplate("shake");

@mixin shakeAnimation($animation) {
  animation: $animation 0.82s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;
  transform: translate3d(0, 0, 0);
  backface-visibility: hidden;
  perspective: 1000px;
}

%shake {
  @include shakeAnimation(shake);
}

%shakeConflict {
  @include shakeAnimation(shakeConflict);
}

%shakeWrongValue {
  @include shakeAnimation(shakeWrongValue);
}

// any parents should set perspective for
.wrapper {
  perspective: 2000px;
}

$animation-duration: 1.5s;

%foo {
  display: inline-block;
  opacity: 0;
  transform-origin: 50% 100%;
  transform: rotateX(180deg);
}

%rotate-out {
  animation: rotate-out $animation-duration infinite;
  @extend %foo;
}

%rotate-forwards {
  // opacity: 0;
  // transform-origin: 0% 100%;
  animation: rotate-forwards $animation-duration infinite;
  @extend %foo;
}

%fall-from-bottom {
  opacity: 0;
  transform-origin: 0% 100%;
  animation: fall-from-bottom $animation-duration infinite;
  @extend %foo;
}

@keyframes fall-from-bottom {
  0% {
    transform: rotateX(0deg);
    opacity: 1;
  }
  20% {
    transform: rotateX(-20deg);
    opacity: 1;
  }
  35% {
    transform: rotateX(20deg);
    opacity: 1;
  }
  65% {
    opacity: 0;
  }
  100% {
    transform: rotate(120deg);
    opacity: 0;
  }
}

@keyframes rotate-forwards {
  0% {
    transform: rotateX(0deg);
    opacity: 1;
  }
  20% {
    transform: rotateX(-20deg);
    opacity: 1;
  }
  35% {
    transform: rotateX(40deg);
    opacity: 1;
  }
  65% {
    opacity: 0;
  }
  100% {
    transform: rotateX(-180deg);
    opacity: 0;
  }
}

@keyframes rotate-out {
  0% {
    transform: rotateX(0deg);
    opacity: 1;
  }
  35% {
    transform: rotateX(-40deg);
    opacity: 1;
  }
  65% {
    opacity: 0;
  }
  100% {
    transform: rotateX(180deg);
    opacity: 0;
  }
}
