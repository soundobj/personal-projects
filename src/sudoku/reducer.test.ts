import { cloneDeep } from 'lodash'
import { removeConflictingCandidates } from './reducer'
import { Cell } from './definitions'
import * as utilsTest from './utils.test'
import * as utils from './utils'

describe('sudoku/reducer',() => {
  describe.only('removeConflictingCandidates', () => {
    const board = [
      utilsTest.createBoardRow([9, 1, 2], 0, { 0: false, 1: false, 2: false }),
      utilsTest.createBoardRow([3, 4, 5], 1, { 0: false, 1: false, 2: false }),
      utilsTest.createBoardRow([6, 7, 8], 2, { 0: false, 1: false, 2: false }),
    ];
    const getRedundantCandidatesMock = jest.spyOn(utils, "getRedundantCandidates")
    it('returns a game without conflicting candidates', () => {
      getRedundantCandidatesMock.mockImplementationOnce(() => [{x:0, y: 0}])
      board[0][0].candidates = {
        3: { selected:false, entered: true },
        5: { selected:false, entered: true },
        7: { selected:false, entered: true },
      }
      const cell = {
        coordinate: {
          x: 1,
          y: 2,
        },
        value: 5,
        solution: 5,
        autogenerated: false 
      }

      const expected = cloneDeep(board)
      expected[0][0].candidates = {
        3: { selected:false, entered: true },
        7: { selected:false, entered: true },
      }
      expect(removeConflictingCandidates(board, cell)).toStrictEqual(expected)
    })
  })
})