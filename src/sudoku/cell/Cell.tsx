import React, { useRef } from 'react'
// import equal from 'fast-deep-equal/es6/react'

import { Cell, Coordinate } from '../definitions'
import Candidates from "./candidates/Candidates"
import './Cell.css'

interface Props extends Cell {
  selectCell: (coordinate: Coordinate) => void
}

export const useCountRenders = (coordinate: Coordinate) => {
  const renders = useRef(0)
  console.error(`@renders x${coordinate.x}x${coordinate.y}`, renders.current++)
}

export default React.memo(
  (props: Props): JSX.Element => {
  const { value, autogenerated, coordinate, solution, selectCell, selected, candidates, conflicting, related } = props
  // useCountRenders(coordinate)
  return (
    <div
      className="grid__item"
      onClick={() => selectCell(coordinate)}
    >
      <div
        className={`content ${related ? "sudoku__cell--related" : ""} ${
          selected ? "sudoku__cell--selected" : ""
        }`}
      >
        <div
          className={`content-inside ${
            conflicting ? "sudoku__cell--conflicting" : ""
          }`}
        >
          {autogenerated && <h2 className="">{solution}</h2>}
          {!autogenerated && value && (
            <h2 className={`${value === solution ? "completed" : "incorrect"}`}>
              {value}
            </h2>
          )}
          {!autogenerated && !value && candidates && (
            <Candidates candidates={candidates} selected={selected} />
          )}
        </div>
      </div>
    </div>
  );
  })
